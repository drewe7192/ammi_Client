{"version":3,"sources":["routes/Main.module.scss","containers/HeaderContainer.tsx","utils/modalComponent/ModalComponent.tsx","utils/Hamburger/MenuDropdownComponent.tsx","utils/mapping/Mapping.tsx","views/dashboardGrid/Header.tsx","views/dashboardGrid/SubHeader.tsx","views/dashboardGrid/DashBoardGridContainer.tsx","containers/BodyContainer.tsx","views/MainGrid/MainGridContainer.tsx","utils/BackGroundVideo/BackgroundVideo.tsx","utils/Loader.tsx","routes/Main.tsx","index.tsx","pictures/naruto1.jpg","pictures/fight2.png","pictures/fight3.jpg","pictures/fight4.jpg","icons/77_Essential_Icons_Users.svg","icons/77_Essential_Icons_Notification.svg","icons/77_Essential_Icons_Comment Lines.svg","utils/BackgroundVideo/BackgroundVideo.module.scss","videos/test1.mp4","utils/Hamburger/MenuDropdownComponent.module.scss","views/dashboardGrid/DashBoardGrid.module.scss","views/MainGrid/MainGrid.module.scss","utils/modalComponent/ModalComponent.module.scss"],"names":["module","exports","HeaderContainer","gridType","props","displayGrid","menuItems","mockData","results","Header","MenuItems","whichGrid","ModalComponent","toggle","isActive","menuItemsForHamburger","id","className","styles","modal","modalContent","modalHeader","modalBody","onClick","close","map","i","modalFooter","Burger","require","MenuDropdownComponent","useState","setIsActive","HamburgerSpring","toggleButton","buttonColor","barColor","Mapping","Array","isArray","length","mappingItem","key","NavbargridItem","frontItems","hamburgerItems","dashboardHeader","dashboardHeaderSection","style","float","fontSize","padding","src","svg","alt","width","height","svg2","svg3","type","placeholder","title","NavbargridContainer","SubHeader","SubHeaderGridItem","paddingTop","SubHeaderGridItem2","SubHeaderMiddleItem","color","animeImages","img2","img3","img4","img5","DashboardGridHeader","slice","dashboardHeaderContainer","dashboardSubheader","DashboardGridBody","bodyGridContainer","newsFeedItems","index","bodyGridItem","card","cardContainer","backgroundColor","textAlign","Title","Subtitle","MappingBody","DashBoardGridContainer","gridContainer","gridItem","BodyContainer","Body","NewsFeed","MainGridHeader","mainGridHeader","header","MainGridBody","fontWeight","paddingLeft","footer","MainGridContainer","BackgroundVideo","isFullScreen","_videoClassName","render","loop","autoPlay","controls","muted","Loader","spanRef","createRef","hasMounted","setHasMounted","useEffect","_htmlSpanReference","current","Spinner","lines","radius","scale","corners","fadeColor","speed","rotate","animation","direction","zIndex","top","left","shadow","position","spin","isLoading","children","isTinted","ref","Main","setTimeout","setIsLoading","setWhichGrid","console","dir","Video","content","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abb9fa04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Main_App__2_omc\",\"App-logo\":\"Main_App-logo__DeNEw\",\"App-logo-spin\":\"Main_App-logo-spin__1QInn\",\"App-header\":\"Main_App-header__10kK3\",\"App-link\":\"Main_App-link__2TJCh\"};","import React from \"react\"\r\nimport { MainGridHeader } from \"./../views/MainGrid/MainGridContainer\"\r\nimport { DashboardGridHeader } from \"./../views/dashboardGrid/DashBoardGridContainer\"\r\nimport mockData from \"./MockData.json\"\r\n\r\nconst whichGrid = (props: any) => {\r\n  var displayGrid;\r\n  if (props.gridType === \"dashBoardGrid\") {\r\n    displayGrid = (\r\n      <DashboardGridHeader menuItems={mockData.results.Header.MenuItems} />\r\n    );\r\n  } else if (props.gridType === \"mainGrid\") {\r\n    displayGrid = (\r\n      <MainGridHeader menuItems={mockData.results.Header.MenuItems} />\r\n    );\r\n  }\r\n  return <>{displayGrid} </>;\r\n};\r\n\r\nconst HeaderContainer = (gridType: any) => {\r\n  return <>{whichGrid(gridType)}</>;\r\n};\r\n\r\nexport default HeaderContainer;\r\n","import React from \"react\"\r\nimport styles from \"./ModalComponent.module.scss\"\r\n\r\nconst ModalComponent = (props: any) => {\r\n  const {\r\n    // buttonLabel,\r\n    // className,\r\n    toggle,\r\n    isActive,\r\n    menuItemsForHamburger,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      {isActive ? (\r\n        <div id=\"myModal\" className={styles.modal}>\r\n          <div className={styles.modalContent}>\r\n            <div className={styles.modalHeader}>\r\n              <h2>Modal Header</h2>\r\n            </div>\r\n            <div className={styles.modalBody}>\r\n              <span onClick={toggle} className={styles.close}>\r\n                &times;\r\n              </span>\r\n              <ul>\r\n                {menuItemsForHamburger.map((i: any) => {\r\n                  return <h2>{i}</h2>;\r\n                })}\r\n              </ul>\r\n            </div>\r\n            <div className={styles.modalFooter}>\r\n              <h3>Modal Footer</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}{\" \"}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalComponent;\r\n","import React, { useState } from \"react\";\r\nimport ModalComponent from './../modalComponent/ModalComponent'\r\n\r\n// import styles from './MenuDropdownComponent.module.scss'\r\nimport './MenuDropdownComponent.module.scss'\r\n\r\n// for some reason it was complaining about this one saying that it needs to be declared after ...\r\nconst Burger = require(\"react-animated-burgers\")\r\n\r\n\r\ninterface IMenuDropdownComponent \r\n{\r\n  buttonLabel?: string\r\n  className?: string\r\n  menuItemsForHamburger: Array<any>\r\n}\r\nconst MenuDropdownComponent = (props: IMenuDropdownComponent) => {\r\n  const { \r\n    // buttonLabel, className, \r\n    menuItemsForHamburger } = props;\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  const toggle = () => setIsActive(!isActive);\r\n\r\n  return (\r\n    <>\r\n      <div className={'keyIWa'}>\r\n        <Burger.HamburgerSpring\r\n          className={'gCByfN'}\r\n          isActive={isActive}\r\n          toggleButton={toggle}\r\n          buttonColor=\"  background: rgb(160, 83, 15);\r\n          background: linear-gradient(\r\n            0deg,\r\n            rgba(160, 83, 15, 0.1) 100%,\r\n            rgba(160, 83, 15, 0.1) 100%\r\n          );\r\n  outline: none;\r\n  \"\r\n          barColor=\"white\"\r\n        />\r\n      </div>\r\n      <ModalComponent\r\n        toggle={toggle}\r\n        isActive={isActive}\r\n        menuItemsForHamburger={menuItemsForHamburger}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MenuDropdownComponent;","import React, { FC } from \"react\"\r\nimport styles from \"./../../views/dashboardGrid/DashBoardGrid.module.scss\"\r\n\r\ninterface IMappingProps {\r\n  menuItems?: Array<string>\r\n}\r\n\r\nexport const Mapping:FC<IMappingProps> = (props: IMappingProps) => {\r\n  const { menuItems } = props\r\n  if(!Array.isArray(menuItems) || menuItems.length === 0)\r\n    return null\r\n  return <>{menuItems.map((mappingItem) => <div key={mappingItem} className={styles.NavbargridItem}>{mappingItem}</div>)}</>\r\n};","import React, { FC } from \"react\";\r\nimport styles from \"./DashBoardGrid.module.scss\";\r\nimport svg from \"./../../icons/77_Essential_Icons_Users.svg\";\r\nimport svg2 from \"./../../icons/77_Essential_Icons_Notification.svg\";\r\nimport svg3 from \"./../../icons/77_Essential_Icons_Comment Lines.svg\";\r\nimport MenuDropdownComponent from \"./../../utils/Hamburger/MenuDropdownComponent\"\r\nimport { Mapping } from \"./../../utils/mapping/Mapping\";\r\n\r\ninterface IHeaderProps\r\n{\r\n  frontItems: Array<string>\r\n  hamburgerItems: Array<string>\r\n}\r\nconst Header:FC<IHeaderProps> = (props: IHeaderProps) => {\r\n  const { frontItems, hamburgerItems } = props\r\n  return (\r\n    <div className={styles.dashboardHeader}>\r\n      <div className={styles.dashboardHeaderSection}>\r\n        <div\r\n          style={{\r\n            float: \"left\",\r\n            fontSize: \"4vh\",\r\n          }}\r\n        >\r\n          Ammi\r\n        </div>\r\n        <div style={{ padding: \"1vh\" }}>\r\n          <img src={svg} alt=\"Ammi Logo One\" style={{width: \"4vw\",height: \"4vh\",}}></img>\r\n          <img src={svg2} alt=\"Ammi Logo Two\" style={{ width: \"4vw\", height: \"4vh\" }}></img>\r\n          <img src={svg3} alt=\"Ammi Logo Three\" style={{ width: \"4vw\", height: \"4vh\" }}></img>\r\n        </div>\r\n      </div>\r\n      <div className={styles.dashboardHeaderSection}>\r\n        <input\r\n          type=\"search\"\r\n          id=\"myInput\"\r\n          placeholder=\"Search for Anime...\"\r\n          title=\"Type in a name\"\r\n        ></input>\r\n      </div>\r\n      <div className={styles.dashboardHeaderSection}>\r\n        <div className={styles.NavbargridContainer}>\r\n          <Mapping menuItems={frontItems} />\r\n          <MenuDropdownComponent menuItemsForHamburger={hamburgerItems} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styles from \"./DashBoardGrid.module.scss\";\r\n\r\nconst SubHeader = () => {\r\n  return (\r\n    <>\r\n      <div className={styles.SubHeaderGridItem} style={{ paddingTop: \"1vh\" }}>\r\n        Ko'niciwa Samantha\r\n      </div>\r\n      <div className={styles.SubHeaderGridItem2} style={{ fontSize: \"2.3vh\" }}>\r\n        <div className={styles.SubHeaderMiddleItem}>\r\n          <div style={{ fontSize: \"4vh\", color: \"orange\" }}>17</div>\r\n          <div>Mangas Read</div>\r\n        </div>\r\n        <div className={styles.SubHeaderMiddleItem}>\r\n          <div style={{ fontSize: \"4vh\", color: \"orange\" }}>10</div>\r\n          <div>Shows Watched</div>\r\n        </div>\r\n        <div className={styles.SubHeaderMiddleItem}>\r\n          <div style={{ fontSize: \"4vh\", color: \"orange\" }}>3</div>\r\n          <div>Movies viewed</div>\r\n        </div>\r\n        <div className={styles.SubHeaderMiddleItem}>\r\n          <div style={{ fontSize: \"4vh\", color: \"orange\" }}>#</div>\r\n          <div>AttackonTitan</div>\r\n        </div>\r\n        <div className={styles.SubHeaderMiddleItem}>\r\n          {\" \"}\r\n          <div style={{ fontSize: \"4vh\", color: \"orange\" }}>#</div>\r\n          <div>Bleach</div>\r\n        </div>\r\n      </div>\r\n      <div style={{ paddingTop: \".5vh\" }} className={styles.SubHeaderGridItem}>\r\n        Status:\r\n        <input\r\n          type=\"search\"\r\n          id=\"myInput\"\r\n          placeholder=\"Search for Anime...\"\r\n          title=\"Type in a name\"\r\n        ></input>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SubHeader;\r\n","import React, { FC } from \"react\";\r\nimport styles from \"./DashBoardGrid.module.scss\";\r\nimport BodyContainer from \"../../containers/BodyContainer\";\r\nimport HeaderContainer from \"../../containers/HeaderContainer\";\r\n// import img from \"./../../pictures/img_avatar.png\";\r\nimport img2 from \"./../../pictures/naruto1.jpg\";\r\nimport img3 from \"./../../pictures/fight2.png\";\r\nimport img4 from \"./../../pictures/fight3.jpg\";\r\nimport img5 from \"./../../pictures/fight4.jpg\";\r\n\r\nimport Header from \"./Header\";\r\nimport SubHeader from \"./SubHeader\";\r\nconst animeImages = [\r\n  img2,\r\n  img3,\r\n  img4,\r\n  img5\r\n]\r\ninterface IDashboardGridHeaderProps {\r\n  menuItems: Array<string>\r\n}\r\nexport const DashboardGridHeader:FC<IDashboardGridHeaderProps> = (props: IDashboardGridHeaderProps) => {\r\n  let chuck = 3;\r\n  let frontItems = props.menuItems.slice(0, chuck);\r\n  let hamburgerItems = props.menuItems.slice(\r\n    chuck,\r\n    chuck + props.menuItems.length\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.dashboardHeaderContainer}>\r\n        <Header frontItems={frontItems} hamburgerItems={hamburgerItems} />\r\n        <div className={styles.dashboardSubheader}>\r\n          <SubHeader />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst MappingBody = (props: any) => {\r\n\r\n\r\n  let NewsFeed = props.newsFeedItems.map((i: any, index: any) => {\r\n    return (\r\n      <>\r\n        {\" \"}\r\n        <div key={index} className={styles.bodyGridItem}>\r\n          <div className={styles.card}>\r\n            <div>\r\n              <img\r\n                src={animeImages[index % animeImages.length]}\r\n                alt=\"Avatar\"\r\n                style={{ width: \"25vw\", height: \"40vh\" }}\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              className={styles.cardContainer}\r\n              style={{\r\n                backgroundColor: \"#9b470f\",\r\n                fontSize: \"3vh\",\r\n                textAlign: \"center\",\r\n                paddingTop: \"7vh\",\r\n              }}\r\n            >\r\n              <h6>\r\n                <b>{i.Title}</b>\r\n              </h6>\r\n              <div>{i.Subtitle}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  });\r\n\r\n  return NewsFeed;\r\n};\r\n\r\nexport const DashboardGridBody = (props: any) => {\r\n  return (\r\n    <>\r\n      <div className={styles.bodyGridContainer}>{MappingBody(props)}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const DashBoardGridContainer = () => {\r\n  return (\r\n    <>\r\n      <div className={styles.gridContainer}>\r\n        <div className={styles.gridItem}>\r\n          <HeaderContainer gridType=\"dashBoardGrid\" />\r\n        </div>\r\n        <div className={styles.gridItem}>\r\n          {\" \"}\r\n          <BodyContainer gridType=\"dashBoardGrid\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { MainGridBody } from \"./../views/MainGrid/MainGridContainer\"\r\nimport { DashboardGridBody } from \"./../views/dashboardGrid/DashBoardGridContainer\";\r\nimport mockData from \"./MockData.json\";\r\n\r\nconst whichGrid = (props: any) => {\r\n  var displayGrid;\r\n  if (props.gridType === \"dashBoardGrid\") {\r\n    displayGrid = (\r\n      <DashboardGridBody newsFeedItems={mockData.results.Body.NewsFeed} />\r\n    );\r\n  } else if (props.gridType === \"mainGrid\") {\r\n    displayGrid = <MainGridBody />;\r\n  }\r\n  return <>{displayGrid} </>;\r\n};\r\n\r\nconst BodyContainer = (gridType: any) => {\r\n  return <>{whichGrid(gridType)}</>;\r\n};\r\n\r\nexport default BodyContainer;\r\n","import React from \"react\";\r\nimport styles from \"./MainGrid.module.scss\";\r\nimport BodyContainer from \"../../containers/BodyContainer\";\r\nimport HeaderContainer from \"../../containers/HeaderContainer\";\r\nimport MenuDropdownComponent from \"./../../utils/Hamburger/MenuDropdownComponent\"\r\nimport { Mapping } from \"./../../utils/mapping/Mapping\";\r\n\r\nexport const MainGridHeader = (props: any) => {\r\n  let chuck = 3;\r\n\r\n  let frontItems = props.menuItems.slice(0, chuck);\r\n  let hamburgerItems = props.menuItems.slice(\r\n    chuck,\r\n    chuck + props.menuItems.length\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <div className={styles.mainGridHeader}>\r\n        <div className={styles.title}>Ammi</div>\r\n        <div className={styles.header}>\r\n          <div className={styles.NavbargridContainer}>\r\n            <Mapping menuItems={frontItems} />\r\n            <div>\r\n              <MenuDropdownComponent menuItemsForHamburger={hamburgerItems} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const MainGridBody = () => {\r\n  return (\r\n    <>\r\n      <div className={styles.bodyGridContainer}>\r\n        <div className={styles.bodyGridItem}>\r\n          <hr style={{ width: \"70%\" }} />\r\n          <div style={{ paddingTop: \"4vh\" }}>\r\n            <div\r\n              style={{ fontSize: \"7vh\", color: \"black\", fontWeight: \"bold\" }}\r\n            >\r\n              The New 2020 Anime Spring Priview Guide{\" \"}\r\n            </div>\r\n            Check everyday for fresh takes about this seasons upcoming shows.\r\n          </div>\r\n          <div\r\n            style={{\r\n              fontSize: \"2vh\",\r\n              paddingTop: \"9vh\",\r\n              float: \"left\",\r\n              paddingLeft: \"9vh\",\r\n            }}\r\n          >\r\n            View\r\n          </div>\r\n        </div>\r\n        <div className={styles.bodyGridItem}></div>\r\n      </div>\r\n      <div className={styles.footer}></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const MainGridContainer = () => {\r\n  return (\r\n    <>\r\n      <div className={styles.gridContainer}>\r\n        <div className={styles.gridItem}>\r\n          <HeaderContainer gridType={\"mainGrid\"} />\r\n        </div>\r\n        <div className={styles.gridItem}>\r\n          {\" \"}\r\n          <BodyContainer gridType={\"mainGrid\"} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { FC } from 'react'\r\n\r\ninterface IBackgroundVideoProps {\r\n      src: string\r\n      isFullScreen: boolean\r\n}\r\n\r\nconst BackgroundVideo:FC<IBackgroundVideoProps> = (props: IBackgroundVideoProps) => {\r\n      const { src, isFullScreen } = props\r\n      const _videoClassName = isFullScreen ? \"fullDim\" : \"\"\r\n      const render = () => <video className={_videoClassName} loop autoPlay controls muted id={'myVideo'}>\r\n            <source src={src} type=\"video/mp4\" />\r\n            Your browser does not support the video tag. I suggest you upgrade your browser.\r\n      </video>\r\n\r\n      if(isFullScreen)\r\n            return <div className=\"fullDim\">{render()}</div>\r\n      return render()\r\n}\r\n\r\nexport default BackgroundVideo;","import React, { FC, ReactNode, createRef, useEffect, useState } from 'react'\r\nimport { Spinner } from 'spin.js'\r\n\r\ninterface ILoaderProps \r\n{\r\n    isLoading: boolean\r\n    isTinted?: boolean\r\n    children: ReactNode\r\n}\r\nexport const Loader:FC<ILoaderProps> = (props: ILoaderProps) => {\r\n    const spanRef = createRef<HTMLSpanElement>()\r\n    let _SpinnerInstance:Spinner|null = null\r\n\r\n    const [hasMounted, setHasMounted] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const _htmlSpanReference = spanRef.current\r\n\r\n        if(hasMounted === false) \r\n        {\r\n            setHasMounted(true)\r\n            if(typeof _htmlSpanReference === 'object' && _htmlSpanReference !== null) {\r\n                // eslint-disable-next-line react-hooks/exhaustive-deps\r\n                _SpinnerInstance = new Spinner(\r\n                {\r\n                    lines: 13, // The number of lines to draw\r\n                    length: 38, // The length of each line\r\n                    width: 17, // The line thickness\r\n                    radius: 45, // The radius of the inner circle\r\n                    scale: 1, // Scales overall size of the spinner\r\n                    corners: 1, // Corner roundness (0..1)\r\n                    color: '#ffffff', // CSS color or array of colors\r\n                    fadeColor: 'transparent', // CSS color or array of colors\r\n                    speed: 1, // Rounds per second\r\n                    rotate: 0, // The rotation offset\r\n                    animation: 'spinner-line-fade-quick', // The CSS animation name for the lines\r\n                    direction: 1, // 1: clockwise, -1: counterclockwise\r\n                    zIndex: 2e9, // The z-index (defaults to 2000000000)\r\n                    className: 'spinner', // The CSS class to assign to the spinner\r\n                    top: '50%', // Top position relative to parent\r\n                    left: '50%', // Left position relative to parent\r\n                    shadow: '0 0 1px transparent', // Box-shadow for the lines\r\n                    position: 'absolute' // Element positioning\r\n                })\r\n                _SpinnerInstance.spin(_htmlSpanReference)\r\n        }\r\n        }\r\n        return () => {\r\n            _SpinnerInstance = null\r\n        }\r\n    }, \r\n    [])\r\n\r\n    const { isLoading, children } = props\r\n    if(!isLoading) return <>{children}</>\r\n\r\n    let isTinted = props.isTinted || false\r\n    let className = \"fullDim Loader flex centered\"\r\n    if(isTinted) className += ' tinted'\r\n    return <>\r\n        <div className={className}>\r\n            <span ref={spanRef}></span>\r\n        </div>\r\n        {children}\r\n    </>\r\n\r\n} ","import React, { useState, useEffect } from \"react\";\r\nimport { MainGridContainer } from \"./../views/MainGrid/MainGridContainer\";\r\nimport { DashBoardGridContainer } from \"./../views/dashboardGrid/DashBoardGridContainer\";\r\n// import BackgroundVideo from \"../utils/BackgroundVideo/BackgroundVideo\";\r\nimport BackgroundVideo from './../utils/BackGroundVideo/BackgroundVideo'\r\nimport styles from \"./../utils/BackgroundVideo/BackgroundVideo.module.scss\";\r\nimport \"./Main.module.scss\"\r\nimport { Loader } from './../utils/Loader'\r\n\r\nimport Video from \"./../videos/test1.mp4\"\r\n// import DevsVideo from \"./../videos/Devs.mp4\"\r\n\r\nconst Main = () => {\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setIsLoading(false)\r\n    }, 5000)\r\n  })\r\n  const [whichGrid, setWhichGrid] = useState(false);\r\n  console.dir(typeof setWhichGrid)\r\n  const [isLoading, setIsLoading] = useState(true)\r\n\r\n  // is this like a Route type thing???\r\n  return <Loader isLoading={isLoading} isTinted={true}>\r\n    <BackgroundVideo src={Video} isFullScreen={false}/>{\" \"}\r\n    <div className={styles.content}>\r\n      {whichGrid ? <MainGridContainer/> : <DashBoardGridContainer />}\r\n    </div>\r\n  </Loader>\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport './spin.js.css'\r\nimport Main from './routes/Main'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Main />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/naruto1.f3fc168e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fight2.a6c6c606.png\";","module.exports = __webpack_public_path__ + \"static/media/fight3.d1fb10b9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fight4.db67e776.jpg\";","module.exports = __webpack_public_path__ + \"static/media/77_Essential_Icons_Users.937fec69.svg\";","module.exports = __webpack_public_path__ + \"static/media/77_Essential_Icons_Notification.daeccde9.svg\";","module.exports = __webpack_public_path__ + \"static/media/77_Essential_Icons_Comment Lines.5001510c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myVideo\":\"BackgroundVideo_myVideo__qW7Cc\",\"content\":\"BackgroundVideo_content__3FYgR\"};","module.exports = __webpack_public_path__ + \"static/media/test1.6ad833d3.mp4\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"keyIWa\":\"MenuDropdownComponent_keyIWa__2AZmm\",\"buttonColor\":\"MenuDropdownComponent_buttonColor__3CPLQ\",\"gCByfN\":\"MenuDropdownComponent_gCByfN__2kQBO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridContainer\":\"DashBoardGrid_gridContainer__3iMUN\",\"gridItem\":\"DashBoardGrid_gridItem__3HEtG\",\"bodyGridContainer\":\"DashBoardGrid_bodyGridContainer__mwCNu\",\"bodyGridItem\":\"DashBoardGrid_bodyGridItem__3rQkx\",\"footer\":\"DashBoardGrid_footer__1aXxc\",\"header\":\"DashBoardGrid_header__TPSSh\",\"NavbargridContainer\":\"DashBoardGrid_NavbargridContainer__23TYG\",\"NavbargridItem\":\"DashBoardGrid_NavbargridItem__3-ITh\",\"dashboardHeaderContainer\":\"DashBoardGrid_dashboardHeaderContainer__2Vips\",\"dashboardHeader\":\"DashBoardGrid_dashboardHeader__1Z4pC\",\"dashboardSubheader\":\"DashBoardGrid_dashboardSubheader__30n1u\",\"card\":\"DashBoardGrid_card__1VTI_\",\"cardContainer\":\"DashBoardGrid_cardContainer__2O94s\",\"dashboardHeaderSection\":\"DashBoardGrid_dashboardHeaderSection__CVpaR\",\"SubHeaderGridItem2\":\"DashBoardGrid_SubHeaderGridItem2__2D_Zo\",\"SubHeaderGridItem\":\"DashBoardGrid_SubHeaderGridItem__3vtJ8\",\"SubHeaderGridContainer\":\"DashBoardGrid_SubHeaderGridContainer__3xHeT\",\"SubHeaderMiddleItem\":\"DashBoardGrid_SubHeaderMiddleItem__3H1XC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridContainer\":\"MainGrid_gridContainer__3-dYF\",\"gridItem\":\"MainGrid_gridItem__3loY0\",\"mainGridHeader\":\"MainGrid_mainGridHeader__2PUr2\",\"title\":\"MainGrid_title__29_W2\",\"bodyGridContainer\":\"MainGrid_bodyGridContainer__3qJdY\",\"bodyGridItem\":\"MainGrid_bodyGridItem__21WDK\",\"footer\":\"MainGrid_footer__2KmC1\",\"header\":\"MainGrid_header__1Zti1\",\"NavbargridContainer\":\"MainGrid_NavbargridContainer__1vjrl\",\"NavVargridItem\":\"MainGrid_NavVargridItem__3XKif\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"ModalComponent_modal__3Mocj\",\"modalContent\":\"ModalComponent_modalContent__3RFJX\",\"animatetop\":\"ModalComponent_animatetop__iHNgx\",\"close\":\"ModalComponent_close__1C9lq\",\"modalHeader\":\"ModalComponent_modalHeader__3H8XV\",\"modalBody\":\"ModalComponent_modalBody__2LocT\",\"modalFooter\":\"ModalComponent_modalFooter__3QVTY\"};"],"sourceRoot":""}